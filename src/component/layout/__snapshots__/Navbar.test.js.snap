// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Navbar /> renders correctly (snapshot) 1`] = `
<IntlProvider
  defaultFormats={Object {}}
  defaultLocale="en"
  formats={Object {}}
  locale="en"
  messages={
    Object {
      "account": "Sign in",
      "buy": "Buy Now",
      "cart": "Cart",
      "casual-shoes": "Casual Shoes",
      "flip-flops": "Flip-Flops",
      "jeans": "Jeans",
      "kurta": "Kurta",
      "language": "English",
      "message11": "Exclusive offer for her",
      "message12": "Wear The Season's Latest Trends",
      "message21": "Exclusive offer for him",
      "message22": "Wear The Season's Latest Trends",
      "message31": "Exclusive offer for your Kids",
      "message32": "Catch the best deals",
      "sarees": "Sarees",
      "search": "Search your product",
      "shirts": "Shirts",
      "sports-shoes": "Sport Shoes",
      "t-shirts": "T-Shirts",
      "track-pants": "Track Pants",
      "trousers": "Trousers",
      "welcome": "Welcome to OneTagShop",
    }
  }
  onError={[Function]}
  textComponent={Symbol(react.fragment)}
>
  <Navbar>
    <div
      className="makeStyles-grow-1"
    >
      <WithStyles(ForwardRef(AppBar))
        color="transparent"
        position="static"
      >
        <ForwardRef(AppBar)
          classes={
            Object {
              "colorDefault": "MuiAppBar-colorDefault",
              "colorInherit": "MuiAppBar-colorInherit",
              "colorPrimary": "MuiAppBar-colorPrimary",
              "colorSecondary": "MuiAppBar-colorSecondary",
              "colorTransparent": "MuiAppBar-colorTransparent",
              "positionAbsolute": "MuiAppBar-positionAbsolute",
              "positionFixed": "MuiAppBar-positionFixed",
              "positionRelative": "MuiAppBar-positionRelative",
              "positionStatic": "MuiAppBar-positionStatic",
              "positionSticky": "MuiAppBar-positionSticky",
              "root": "MuiAppBar-root",
            }
          }
          color="transparent"
          position="static"
        >
          <WithStyles(ForwardRef(Paper))
            className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorTransparent"
            component="header"
            elevation={4}
            square={true}
          >
            <ForwardRef(Paper)
              className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorTransparent"
              classes={
                Object {
                  "elevation0": "MuiPaper-elevation0",
                  "elevation1": "MuiPaper-elevation1",
                  "elevation10": "MuiPaper-elevation10",
                  "elevation11": "MuiPaper-elevation11",
                  "elevation12": "MuiPaper-elevation12",
                  "elevation13": "MuiPaper-elevation13",
                  "elevation14": "MuiPaper-elevation14",
                  "elevation15": "MuiPaper-elevation15",
                  "elevation16": "MuiPaper-elevation16",
                  "elevation17": "MuiPaper-elevation17",
                  "elevation18": "MuiPaper-elevation18",
                  "elevation19": "MuiPaper-elevation19",
                  "elevation2": "MuiPaper-elevation2",
                  "elevation20": "MuiPaper-elevation20",
                  "elevation21": "MuiPaper-elevation21",
                  "elevation22": "MuiPaper-elevation22",
                  "elevation23": "MuiPaper-elevation23",
                  "elevation24": "MuiPaper-elevation24",
                  "elevation3": "MuiPaper-elevation3",
                  "elevation4": "MuiPaper-elevation4",
                  "elevation5": "MuiPaper-elevation5",
                  "elevation6": "MuiPaper-elevation6",
                  "elevation7": "MuiPaper-elevation7",
                  "elevation8": "MuiPaper-elevation8",
                  "elevation9": "MuiPaper-elevation9",
                  "outlined": "MuiPaper-outlined",
                  "root": "MuiPaper-root",
                  "rounded": "MuiPaper-rounded",
                }
              }
              component="header"
              elevation={4}
              square={true}
            >
              <header
                className="MuiPaper-root MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorTransparent MuiPaper-elevation4"
              >
                <WithStyles(ForwardRef(Toolbar))>
                  <ForwardRef(Toolbar)
                    classes={
                      Object {
                        "dense": "MuiToolbar-dense",
                        "gutters": "MuiToolbar-gutters",
                        "regular": "MuiToolbar-regular",
                        "root": "MuiToolbar-root",
                      }
                    }
                  >
                    <div
                      className="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                    >
                      <WithStyles(ForwardRef(IconButton))
                        className="makeStyles-menuButton-2"
                        color="inherit"
                        edge="start"
                      >
                        <ForwardRef(IconButton)
                          className="makeStyles-menuButton-2"
                          classes={
                            Object {
                              "colorInherit": "MuiIconButton-colorInherit",
                              "colorPrimary": "MuiIconButton-colorPrimary",
                              "colorSecondary": "MuiIconButton-colorSecondary",
                              "disabled": "Mui-disabled",
                              "edgeEnd": "MuiIconButton-edgeEnd",
                              "edgeStart": "MuiIconButton-edgeStart",
                              "label": "MuiIconButton-label",
                              "root": "MuiIconButton-root",
                              "sizeSmall": "MuiIconButton-sizeSmall",
                            }
                          }
                          color="inherit"
                          edge="start"
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            centerRipple={true}
                            className="MuiIconButton-root makeStyles-menuButton-2 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                            disabled={false}
                            focusRipple={true}
                          >
                            <ForwardRef(ButtonBase)
                              centerRipple={true}
                              className="MuiIconButton-root makeStyles-menuButton-2 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              disabled={false}
                              focusRipple={true}
                            >
                              <button
                                className="MuiButtonBase-root MuiIconButton-root makeStyles-menuButton-2 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                disabled={false}
                                onBlur={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={0}
                                type="button"
                              >
                                <span
                                  className="MuiIconButton-label"
                                >
                                  <ForwardRef(StorefrontOutlinedIcon)>
                                    <WithStyles(ForwardRef(SvgIcon))>
                                      <ForwardRef(SvgIcon)
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M21.9 8.89l-1.05-4.37c-.22-.9-1-1.52-1.91-1.52H5.05c-.9 0-1.69.63-1.9 1.52L2.1 8.89c-.24 1.02-.02 2.06.62 2.88.08.11.19.19.28.29V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-6.94c.09-.09.2-.18.28-.28.64-.82.87-1.87.62-2.89zm-2.99-3.9l1.05 4.37c.1.42.01.84-.25 1.17-.14.18-.44.47-.94.47-.61 0-1.14-.49-1.21-1.14L16.98 5l1.93-.01zM13 5h1.96l.54 4.52c.05.39-.07.78-.33 1.07-.22.26-.54.41-.95.41-.67 0-1.22-.59-1.22-1.31V5zM8.49 9.52L9.04 5H11v4.69c0 .72-.55 1.31-1.29 1.31-.34 0-.65-.15-.89-.41-.25-.29-.37-.68-.33-1.07zm-4.45-.16L5.05 5h1.97l-.58 4.86c-.08.65-.6 1.14-1.21 1.14-.49 0-.8-.29-.93-.47-.27-.32-.36-.75-.26-1.17zM5 19v-6.03c.08.01.15.03.23.03.87 0 1.66-.36 2.24-.95.6.6 1.4.95 2.31.95.87 0 1.65-.36 2.23-.93.59.57 1.39.93 2.29.93.84 0 1.64-.35 2.24-.95.58.59 1.37.95 2.24.95.08 0 .15-.02.23-.03V19H5z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef(StorefrontOutlinedIcon)>
                                  <WithStyles(ForwardRef(Typography))
                                    className="makeStyles-title-3"
                                    noWrap={true}
                                    variant="h6"
                                  >
                                    <ForwardRef(Typography)
                                      className="makeStyles-title-3"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      noWrap={true}
                                      variant="h6"
                                    >
                                      <h6
                                        className="MuiTypography-root makeStyles-title-3 MuiTypography-h6 MuiTypography-noWrap"
                                      >
                                        OneTagShop
                                      </h6>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </span>
                                <WithStyles(memo)
                                  center={true}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={true}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(memo)>
                              </button>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(IconButton)>
                      </WithStyles(ForwardRef(IconButton))>
                      <div
                        className="makeStyles-search-5"
                      >
                        <div
                          className="makeStyles-searchIcon-6"
                        >
                          <ForwardRef(SearchIcon)>
                            <WithStyles(ForwardRef(SvgIcon))>
                              <ForwardRef(SvgIcon)
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                    "colorError": "MuiSvgIcon-colorError",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                    "root": "MuiSvgIcon-root",
                                  }
                                }
                              >
                                <svg
                                  aria-hidden={true}
                                  className="MuiSvgIcon-root"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </WithStyles(ForwardRef(SvgIcon))>
                          </ForwardRef(SearchIcon)>
                        </div>
                        <WithStyles(ForwardRef(InputBase))
                          classes={
                            Object {
                              "input": "makeStyles-inputInput-8",
                              "root": "makeStyles-inputRoot-7",
                            }
                          }
                          inputProps={
                            Object {
                              "aria-label": "search",
                            }
                          }
                          placeholder="Search your products"
                        >
                          <ForwardRef(InputBase)
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd",
                                "adornedStart": "MuiInputBase-adornedStart",
                                "colorSecondary": "MuiInputBase-colorSecondary",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "formControl": "MuiInputBase-formControl",
                                "fullWidth": "MuiInputBase-fullWidth",
                                "input": "MuiInputBase-input makeStyles-inputInput-8",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                "inputMarginDense": "MuiInputBase-inputMarginDense",
                                "inputMultiline": "MuiInputBase-inputMultiline",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                "marginDense": "MuiInputBase-marginDense",
                                "multiline": "MuiInputBase-multiline",
                                "root": "MuiInputBase-root makeStyles-inputRoot-7",
                              }
                            }
                            inputProps={
                              Object {
                                "aria-label": "search",
                              }
                            }
                            placeholder="Search your products"
                          >
                            <div
                              className="MuiInputBase-root makeStyles-inputRoot-7"
                              onClick={[Function]}
                            >
                              <input
                                aria-label="search"
                                className="MuiInputBase-input makeStyles-inputInput-8"
                                onAnimationStart={[Function]}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder="Search your products"
                                type="text"
                              />
                            </div>
                          </ForwardRef(InputBase)>
                        </WithStyles(ForwardRef(InputBase))>
                      </div>
                      <div
                        className="makeStyles-grow-1"
                      />
                      <div
                        className="makeStyles-sectionDesktop-9"
                      >
                        <WithStyles(ForwardRef(IconButton))
                          color="inherit"
                        >
                          <ForwardRef(IconButton)
                            classes={
                              Object {
                                "colorInherit": "MuiIconButton-colorInherit",
                                "colorPrimary": "MuiIconButton-colorPrimary",
                                "colorSecondary": "MuiIconButton-colorSecondary",
                                "disabled": "Mui-disabled",
                                "edgeEnd": "MuiIconButton-edgeEnd",
                                "edgeStart": "MuiIconButton-edgeStart",
                                "label": "MuiIconButton-label",
                                "root": "MuiIconButton-root",
                                "sizeSmall": "MuiIconButton-sizeSmall",
                              }
                            }
                            color="inherit"
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              centerRipple={true}
                              className="MuiIconButton-root MuiIconButton-colorInherit"
                              disabled={false}
                              focusRipple={true}
                            >
                              <ForwardRef(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root MuiIconButton-colorInherit"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                disabled={false}
                                focusRipple={true}
                              >
                                <button
                                  className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiIconButton-label"
                                  >
                                    <WithStyles(ForwardRef(Badge))
                                      badgeContent={0}
                                      color="secondary"
                                    >
                                      <ForwardRef(Badge)
                                        badgeContent={0}
                                        classes={
                                          Object {
                                            "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                            "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                            "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                            "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                            "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                            "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                            "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                            "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                            "badge": "MuiBadge-badge",
                                            "colorError": "MuiBadge-colorError",
                                            "colorPrimary": "MuiBadge-colorPrimary",
                                            "colorSecondary": "MuiBadge-colorSecondary",
                                            "dot": "MuiBadge-dot",
                                            "invisible": "MuiBadge-invisible",
                                            "root": "MuiBadge-root",
                                          }
                                        }
                                        color="secondary"
                                      >
                                        <span
                                          className="MuiBadge-root"
                                        >
                                          <ForwardRef(ShoppingCartOutlinedIcon)>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M15.55 13c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.37-.66-.11-1.48-.87-1.48H5.21l-.94-2H1v2h2l3.6 7.59-1.35 2.44C4.52 15.37 5.48 17 7 17h12v-2H7l1.1-2h7.45zM6.16 6h12.15l-2.76 5H8.53L6.16 6zM7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef(ShoppingCartOutlinedIcon)>
                                          <span
                                            className="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorSecondary MuiBadge-invisible"
                                          >
                                            0
                                          </span>
                                        </span>
                                      </ForwardRef(Badge)>
                                    </WithStyles(ForwardRef(Badge))>
                                    <span
                                      className="makeStyles-iconText-4"
                                    >
                                      <FormattedMessage
                                        id="cart"
                                      >
                                        Cart
                                      </FormattedMessage>
                                    </span>
                                  </span>
                                  <WithStyles(memo)
                                    center={true}
                                  >
                                    <ForwardRef(TouchRipple)
                                      center={true}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child",
                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                          "ripple": "MuiTouchRipple-ripple",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                          "root": "MuiTouchRipple-root",
                                        }
                                      }
                                    >
                                      <span
                                        className="MuiTouchRipple-root"
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          component={null}
                                          exit={true}
                                        />
                                      </span>
                                    </ForwardRef(TouchRipple)>
                                  </WithStyles(memo)>
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(IconButton)>
                        </WithStyles(ForwardRef(IconButton))>
                        <WithStyles(ForwardRef(IconButton))
                          color="inherit"
                          onClick={[Function]}
                        >
                          <ForwardRef(IconButton)
                            classes={
                              Object {
                                "colorInherit": "MuiIconButton-colorInherit",
                                "colorPrimary": "MuiIconButton-colorPrimary",
                                "colorSecondary": "MuiIconButton-colorSecondary",
                                "disabled": "Mui-disabled",
                                "edgeEnd": "MuiIconButton-edgeEnd",
                                "edgeStart": "MuiIconButton-edgeStart",
                                "label": "MuiIconButton-label",
                                "root": "MuiIconButton-root",
                                "sizeSmall": "MuiIconButton-sizeSmall",
                              }
                            }
                            color="inherit"
                            onClick={[Function]}
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              centerRipple={true}
                              className="MuiIconButton-root MuiIconButton-colorInherit"
                              disabled={false}
                              focusRipple={true}
                              onClick={[Function]}
                            >
                              <ForwardRef(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root MuiIconButton-colorInherit"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                disabled={false}
                                focusRipple={true}
                                onClick={[Function]}
                              >
                                <button
                                  className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiIconButton-label"
                                  >
                                    <ForwardRef(AccountCircleOutlinedIcon)>
                                      <WithStyles(ForwardRef(SvgIcon))>
                                        <ForwardRef(SvgIcon)
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM7.07 18.28c.43-.9 3.05-1.78 4.93-1.78s4.51.88 4.93 1.78C15.57 19.36 13.86 20 12 20s-3.57-.64-4.93-1.72zm11.29-1.45c-1.43-1.74-4.9-2.33-6.36-2.33s-4.93.59-6.36 2.33C4.62 15.49 4 13.82 4 12c0-4.41 3.59-8 8-8s8 3.59 8 8c0 1.82-.62 3.49-1.64 4.83zM12 6c-1.94 0-3.5 1.56-3.5 3.5S10.06 13 12 13s3.5-1.56 3.5-3.5S13.94 6 12 6zm0 5c-.83 0-1.5-.67-1.5-1.5S11.17 8 12 8s1.5.67 1.5 1.5S12.83 11 12 11z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef(AccountCircleOutlinedIcon)>
                                    <span
                                      className="makeStyles-iconText-4"
                                    >
                                      <FormattedMessage
                                        id="account"
                                      >
                                        Sign in
                                      </FormattedMessage>
                                    </span>
                                  </span>
                                  <WithStyles(memo)
                                    center={true}
                                  >
                                    <ForwardRef(TouchRipple)
                                      center={true}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child",
                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                          "ripple": "MuiTouchRipple-ripple",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                          "root": "MuiTouchRipple-root",
                                        }
                                      }
                                    >
                                      <span
                                        className="MuiTouchRipple-root"
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          component={null}
                                          exit={true}
                                        />
                                      </span>
                                    </ForwardRef(TouchRipple)>
                                  </WithStyles(memo)>
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(IconButton)>
                        </WithStyles(ForwardRef(IconButton))>
                        <WithStyles(ForwardRef(IconButton))
                          aria-controls="primary-search-account-menu"
                          aria-haspopup="true"
                          color="inherit"
                          edge="end"
                          onClick={[Function]}
                        >
                          <ForwardRef(IconButton)
                            aria-controls="primary-search-account-menu"
                            aria-haspopup="true"
                            classes={
                              Object {
                                "colorInherit": "MuiIconButton-colorInherit",
                                "colorPrimary": "MuiIconButton-colorPrimary",
                                "colorSecondary": "MuiIconButton-colorSecondary",
                                "disabled": "Mui-disabled",
                                "edgeEnd": "MuiIconButton-edgeEnd",
                                "edgeStart": "MuiIconButton-edgeStart",
                                "label": "MuiIconButton-label",
                                "root": "MuiIconButton-root",
                                "sizeSmall": "MuiIconButton-sizeSmall",
                              }
                            }
                            color="inherit"
                            edge="end"
                            onClick={[Function]}
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              aria-controls="primary-search-account-menu"
                              aria-haspopup="true"
                              centerRipple={true}
                              className="MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-edgeEnd"
                              disabled={false}
                              focusRipple={true}
                              onClick={[Function]}
                            >
                              <ForwardRef(ButtonBase)
                                aria-controls="primary-search-account-menu"
                                aria-haspopup="true"
                                centerRipple={true}
                                className="MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-edgeEnd"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                disabled={false}
                                focusRipple={true}
                                onClick={[Function]}
                              >
                                <button
                                  aria-controls="primary-search-account-menu"
                                  aria-haspopup="true"
                                  className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-edgeEnd"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiIconButton-label"
                                  >
                                    <ForwardRef(LanguageOutlinedIcon)>
                                      <WithStyles(ForwardRef(SvgIcon))>
                                        <ForwardRef(SvgIcon)
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2s.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56zm2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2s.07-1.35.16-2h4.68c.09.65.16 1.32.16 2s-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2s-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef(LanguageOutlinedIcon)>
                                    <span
                                      className="makeStyles-iconText-4"
                                    >
                                      <FormattedMessage
                                        id="language"
                                      >
                                        English
                                      </FormattedMessage>
                                    </span>
                                  </span>
                                  <WithStyles(memo)
                                    center={true}
                                  >
                                    <ForwardRef(TouchRipple)
                                      center={true}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child",
                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                          "ripple": "MuiTouchRipple-ripple",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                          "root": "MuiTouchRipple-root",
                                        }
                                      }
                                    >
                                      <span
                                        className="MuiTouchRipple-root"
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          component={null}
                                          exit={true}
                                        />
                                      </span>
                                    </ForwardRef(TouchRipple)>
                                  </WithStyles(memo)>
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(IconButton)>
                        </WithStyles(ForwardRef(IconButton))>
                      </div>
                      <div
                        className="makeStyles-sectionMobile-10"
                      >
                        <WithStyles(ForwardRef(IconButton))
                          aria-controls="primary-search-account-menu-mobile"
                          aria-haspopup="true"
                          color="inherit"
                          onClick={[Function]}
                        >
                          <ForwardRef(IconButton)
                            aria-controls="primary-search-account-menu-mobile"
                            aria-haspopup="true"
                            classes={
                              Object {
                                "colorInherit": "MuiIconButton-colorInherit",
                                "colorPrimary": "MuiIconButton-colorPrimary",
                                "colorSecondary": "MuiIconButton-colorSecondary",
                                "disabled": "Mui-disabled",
                                "edgeEnd": "MuiIconButton-edgeEnd",
                                "edgeStart": "MuiIconButton-edgeStart",
                                "label": "MuiIconButton-label",
                                "root": "MuiIconButton-root",
                                "sizeSmall": "MuiIconButton-sizeSmall",
                              }
                            }
                            color="inherit"
                            onClick={[Function]}
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              aria-controls="primary-search-account-menu-mobile"
                              aria-haspopup="true"
                              centerRipple={true}
                              className="MuiIconButton-root MuiIconButton-colorInherit"
                              disabled={false}
                              focusRipple={true}
                              onClick={[Function]}
                            >
                              <ForwardRef(ButtonBase)
                                aria-controls="primary-search-account-menu-mobile"
                                aria-haspopup="true"
                                centerRipple={true}
                                className="MuiIconButton-root MuiIconButton-colorInherit"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                disabled={false}
                                focusRipple={true}
                                onClick={[Function]}
                              >
                                <button
                                  aria-controls="primary-search-account-menu-mobile"
                                  aria-haspopup="true"
                                  className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiIconButton-label"
                                  >
                                    <ForwardRef(MoreVertIcon)>
                                      <WithStyles(ForwardRef(SvgIcon))>
                                        <ForwardRef(SvgIcon)
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef(MoreVertIcon)>
                                  </span>
                                  <WithStyles(memo)
                                    center={true}
                                  >
                                    <ForwardRef(TouchRipple)
                                      center={true}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child",
                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                          "ripple": "MuiTouchRipple-ripple",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                          "root": "MuiTouchRipple-root",
                                        }
                                      }
                                    >
                                      <span
                                        className="MuiTouchRipple-root"
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          component={null}
                                          exit={true}
                                        />
                                      </span>
                                    </ForwardRef(TouchRipple)>
                                  </WithStyles(memo)>
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(IconButton)>
                        </WithStyles(ForwardRef(IconButton))>
                      </div>
                    </div>
                  </ForwardRef(Toolbar)>
                </WithStyles(ForwardRef(Toolbar))>
              </header>
            </ForwardRef(Paper)>
          </WithStyles(ForwardRef(Paper))>
        </ForwardRef(AppBar)>
      </WithStyles(ForwardRef(AppBar))>
      <Login
        handleClose={[Function]}
        open={false}
      >
        <WithStyles(ForwardRef(Dialog))
          fullScreen={false}
          open={false}
          scroll="body"
        >
          <ForwardRef(Dialog)
            classes={
              Object {
                "container": "MuiDialog-container",
                "paper": "MuiDialog-paper",
                "paperFullScreen": "MuiDialog-paperFullScreen",
                "paperFullWidth": "MuiDialog-paperFullWidth",
                "paperScrollBody": "MuiDialog-paperScrollBody",
                "paperScrollPaper": "MuiDialog-paperScrollPaper",
                "paperWidthFalse": "MuiDialog-paperWidthFalse",
                "paperWidthLg": "MuiDialog-paperWidthLg",
                "paperWidthMd": "MuiDialog-paperWidthMd",
                "paperWidthSm": "MuiDialog-paperWidthSm",
                "paperWidthXl": "MuiDialog-paperWidthXl",
                "paperWidthXs": "MuiDialog-paperWidthXs",
                "root": "MuiDialog-root",
                "scrollBody": "MuiDialog-scrollBody",
                "scrollPaper": "MuiDialog-scrollPaper",
              }
            }
            fullScreen={false}
            open={false}
            scroll="body"
          >
            <ForwardRef(Modal)
              BackdropComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "Naked": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "propTypes": Object {
                      "children": [Function],
                      "className": [Function],
                      "classes": [Function],
                      "invisible": [Function],
                      "open": [Function],
                      "transitionDuration": [Function],
                    },
                    "render": [Function],
                  },
                  "options": Object {
                    "defaultTheme": Object {
                      "breakpoints": Object {
                        "between": [Function],
                        "down": [Function],
                        "keys": Array [
                          "xs",
                          "sm",
                          "md",
                          "lg",
                          "xl",
                        ],
                        "only": [Function],
                        "up": [Function],
                        "values": Object {
                          "lg": 1280,
                          "md": 960,
                          "sm": 600,
                          "xl": 1920,
                          "xs": 0,
                        },
                        "width": [Function],
                      },
                      "direction": "ltr",
                      "mixins": Object {
                        "gutters": [Function],
                        "toolbar": Object {
                          "@media (min-width:0px) and (orientation: landscape)": Object {
                            "minHeight": 48,
                          },
                          "@media (min-width:600px)": Object {
                            "minHeight": 64,
                          },
                          "minHeight": 56,
                        },
                      },
                      "overrides": Object {},
                      "palette": Object {
                        "action": Object {
                          "activatedOpacity": 0.12,
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "disabledOpacity": 0.38,
                          "focus": "rgba(0, 0, 0, 0.12)",
                          "focusOpacity": 0.12,
                          "hover": "rgba(0, 0, 0, 0.04)",
                          "hoverOpacity": 0.04,
                          "selected": "rgba(0, 0, 0, 0.08)",
                          "selectedOpacity": 0.08,
                        },
                        "augmentColor": [Function],
                        "background": Object {
                          "default": "#fafafa",
                          "paper": "#fff",
                        },
                        "common": Object {
                          "black": "#000",
                          "white": "#fff",
                        },
                        "contrastThreshold": 3,
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "getContrastText": [Function],
                        "grey": Object {
                          "100": "#f5f5f5",
                          "200": "#eeeeee",
                          "300": "#e0e0e0",
                          "400": "#bdbdbd",
                          "50": "#fafafa",
                          "500": "#9e9e9e",
                          "600": "#757575",
                          "700": "#616161",
                          "800": "#424242",
                          "900": "#212121",
                          "A100": "#d5d5d5",
                          "A200": "#aaaaaa",
                          "A400": "#303030",
                          "A700": "#616161",
                        },
                        "info": Object {
                          "contrastText": "#fff",
                          "dark": "#1976d2",
                          "light": "#64b5f6",
                          "main": "#2196f3",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "success": Object {
                          "contrastText": "rgba(0, 0, 0, 0.87)",
                          "dark": "#388e3c",
                          "light": "#81c784",
                          "main": "#4caf50",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                        "tonalOffset": 0.2,
                        "type": "light",
                        "warning": Object {
                          "contrastText": "rgba(0, 0, 0, 0.87)",
                          "dark": "#f57c00",
                          "light": "#ffb74d",
                          "main": "#ff9800",
                        },
                      },
                      "props": Object {},
                      "shadows": Array [
                        "none",
                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                      ],
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": [Function],
                      "transitions": Object {
                        "create": [Function],
                        "duration": Object {
                          "complex": 375,
                          "enteringScreen": 225,
                          "leavingScreen": 195,
                          "short": 250,
                          "shorter": 200,
                          "shortest": 150,
                          "standard": 300,
                        },
                        "easing": Object {
                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                        },
                        "getAutoHeightDuration": [Function],
                      },
                      "typography": Object {
                        "body1": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "1rem",
                          "fontWeight": 400,
                          "letterSpacing": "0.00938em",
                          "lineHeight": 1.5,
                        },
                        "body2": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "0.875rem",
                          "fontWeight": 400,
                          "letterSpacing": "0.01071em",
                          "lineHeight": 1.43,
                        },
                        "button": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "0.875rem",
                          "fontWeight": 500,
                          "letterSpacing": "0.02857em",
                          "lineHeight": 1.75,
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "0.75rem",
                          "fontWeight": 400,
                          "letterSpacing": "0.03333em",
                          "lineHeight": 1.66,
                        },
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": 14,
                        "fontWeightBold": 700,
                        "fontWeightLight": 300,
                        "fontWeightMedium": 500,
                        "fontWeightRegular": 400,
                        "h1": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "6rem",
                          "fontWeight": 300,
                          "letterSpacing": "-0.01562em",
                          "lineHeight": 1.167,
                        },
                        "h2": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "3.75rem",
                          "fontWeight": 300,
                          "letterSpacing": "-0.00833em",
                          "lineHeight": 1.2,
                        },
                        "h3": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "3rem",
                          "fontWeight": 400,
                          "letterSpacing": "0em",
                          "lineHeight": 1.167,
                        },
                        "h4": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "2.125rem",
                          "fontWeight": 400,
                          "letterSpacing": "0.00735em",
                          "lineHeight": 1.235,
                        },
                        "h5": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "1.5rem",
                          "fontWeight": 400,
                          "letterSpacing": "0em",
                          "lineHeight": 1.334,
                        },
                        "h6": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "1.25rem",
                          "fontWeight": 500,
                          "letterSpacing": "0.0075em",
                          "lineHeight": 1.6,
                        },
                        "htmlFontSize": 16,
                        "overline": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "0.75rem",
                          "fontWeight": 400,
                          "letterSpacing": "0.08333em",
                          "lineHeight": 2.66,
                          "textTransform": "uppercase",
                        },
                        "pxToRem": [Function],
                        "round": [Function],
                        "subtitle1": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "1rem",
                          "fontWeight": 400,
                          "letterSpacing": "0.00938em",
                          "lineHeight": 1.75,
                        },
                        "subtitle2": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "0.875rem",
                          "fontWeight": 500,
                          "letterSpacing": "0.00714em",
                          "lineHeight": 1.57,
                        },
                      },
                      "zIndex": Object {
                        "appBar": 1100,
                        "drawer": 1200,
                        "mobileStepper": 1000,
                        "modal": 1300,
                        "snackbar": 1400,
                        "speedDial": 1050,
                        "tooltip": 1500,
                      },
                    },
                    "name": "MuiBackdrop",
                  },
                  "propTypes": Object {
                    "classes": [Function],
                    "innerRef": [Function],
                  },
                  "render": [Function],
                  "useStyles": [Function],
                }
              }
              BackdropProps={
                Object {
                  "transitionDuration": Object {
                    "enter": 225,
                    "exit": 195,
                  },
                }
              }
              className="MuiDialog-root"
              closeAfterTransition={true}
              disableBackdropClick={false}
              disableEscapeKeyDown={false}
              open={false}
            />
          </ForwardRef(Dialog)>
        </WithStyles(ForwardRef(Dialog))>
      </Login>
      <WithStyles(ForwardRef(Menu))
        anchorEl={null}
        anchorOrigin={
          Object {
            "horizontal": "left",
            "vertical": "top",
          }
        }
        id="primary-search-account-menu-mobile"
        keepMounted={true}
        onClose={[Function]}
        open={false}
        transformOrigin={
          Object {
            "horizontal": "left",
            "vertical": "top",
          }
        }
      >
        <ForwardRef(Menu)
          anchorEl={null}
          anchorOrigin={
            Object {
              "horizontal": "left",
              "vertical": "top",
            }
          }
          classes={
            Object {
              "list": "MuiMenu-list",
              "paper": "MuiMenu-paper",
            }
          }
          id="primary-search-account-menu-mobile"
          keepMounted={true}
          onClose={[Function]}
          open={false}
          transformOrigin={
            Object {
              "horizontal": "left",
              "vertical": "top",
            }
          }
        >
          <WithStyles(ForwardRef(Popover))
            PaperProps={
              Object {
                "classes": Object {
                  "root": "MuiMenu-paper",
                },
              }
            }
            anchorEl={null}
            anchorOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
            getContentAnchorEl={[Function]}
            id="primary-search-account-menu-mobile"
            keepMounted={true}
            onClose={[Function]}
            onEntering={[Function]}
            open={false}
            transformOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
            transitionDuration="auto"
          >
            <ForwardRef(Popover)
              PaperProps={
                Object {
                  "classes": Object {
                    "root": "MuiMenu-paper",
                  },
                }
              }
              anchorEl={null}
              anchorOrigin={
                Object {
                  "horizontal": "left",
                  "vertical": "top",
                }
              }
              classes={
                Object {
                  "paper": "MuiPopover-paper",
                  "root": "MuiPopover-root",
                }
              }
              getContentAnchorEl={[Function]}
              id="primary-search-account-menu-mobile"
              keepMounted={true}
              onClose={[Function]}
              onEntering={[Function]}
              open={false}
              transformOrigin={
                Object {
                  "horizontal": "left",
                  "vertical": "top",
                }
              }
              transitionDuration="auto"
            >
              <ForwardRef(Modal)
                BackdropProps={
                  Object {
                    "invisible": true,
                  }
                }
                className="MuiPopover-root"
                id="primary-search-account-menu-mobile"
                keepMounted={true}
                onClose={[Function]}
                open={false}
              >
                <ForwardRef(Portal)
                  disablePortal={false}
                >
                  <Portal
                    containerInfo={
                      <body>
                        <div
                          aria-hidden="true"
                          class="MuiPopover-root"
                          id="primary-search-account-menu-mobile"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                        >
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                            tabindex="-1"
                          >
                            <ul
                              class="MuiList-root MuiMenu-list MuiList-padding"
                              role="menu"
                              tabindex="-1"
                            >
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                role="menuitem"
                                tabindex="0"
                              >
                                <button
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                                  tabindex="0"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <span
                                      class="MuiBadge-root"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M15.55 13c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.37-.66-.11-1.48-.87-1.48H5.21l-.94-2H1v2h2l3.6 7.59-1.35 2.44C4.52 15.37 5.48 17 7 17h12v-2H7l1.1-2h7.45zM6.16 6h12.15l-2.76 5H8.53L6.16 6zM7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z"
                                        />
                                      </svg>
                                      <span
                                        class="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorSecondary MuiBadge-invisible"
                                      >
                                        0
                                      </span>
                                    </span>
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                                <p>
                                  Cart
                                </p>
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                role="menuitem"
                                tabindex="-1"
                              >
                                <button
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                                  tabindex="0"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <span
                                      class="MuiBadge-root"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM7.07 18.28c.43-.9 3.05-1.78 4.93-1.78s4.51.88 4.93 1.78C15.57 19.36 13.86 20 12 20s-3.57-.64-4.93-1.72zm11.29-1.45c-1.43-1.74-4.9-2.33-6.36-2.33s-4.93.59-6.36 2.33C4.62 15.49 4 13.82 4 12c0-4.41 3.59-8 8-8s8 3.59 8 8c0 1.82-.62 3.49-1.64 4.83zM12 6c-1.94 0-3.5 1.56-3.5 3.5S10.06 13 12 13s3.5-1.56 3.5-3.5S13.94 6 12 6zm0 5c-.83 0-1.5-.67-1.5-1.5S11.17 8 12 8s1.5.67 1.5 1.5S12.83 11 12 11z"
                                        />
                                      </svg>
                                      <span
                                        class="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorSecondary MuiBadge-invisible"
                                      >
                                        0
                                      </span>
                                    </span>
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                                <p>
                                  Sign in
                                </p>
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                role="menuitem"
                                tabindex="-1"
                              >
                                <button
                                  aria-controls="primary-search-account-menu"
                                  aria-haspopup="true"
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                                  tabindex="0"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2s.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56zm2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2s.07-1.35.16-2h4.68c.09.65.16 1.32.16 2s-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2s-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z"
                                      />
                                    </svg>
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                                <p>
                                  English
                                </p>
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                            </ul>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                        <div
                          aria-hidden="true"
                          class="MuiPopover-root"
                          id="primary-search-account-menu"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                        >
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                            tabindex="-1"
                          >
                            <ul
                              class="MuiList-root MuiMenu-list MuiList-padding"
                              role="menu"
                              tabindex="-1"
                            >
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                role="menuitem"
                                tabindex="0"
                              >
                                English
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                role="menuitem"
                                tabindex="-1"
                              >
                                हिन्दी
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                            </ul>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                      </body>
                    }
                  >
                    <div
                      className="MuiPopover-root"
                      id="primary-search-account-menu-mobile"
                      onKeyDown={[Function]}
                      role="presentation"
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                          "visibility": "hidden",
                          "zIndex": 1300,
                        }
                      }
                    >
                      <ForwardRef(SimpleBackdrop)
                        invisible={true}
                        onClick={[Function]}
                        open={false}
                      />
                      <Unstable_TrapFocus
                        disableAutoFocus={false}
                        disableEnforceFocus={false}
                        disableRestoreFocus={false}
                        getDoc={[Function]}
                        isEnabled={[Function]}
                        open={false}
                      >
                        <div
                          data-test="sentinelStart"
                          tabIndex={0}
                        />
                        <ForwardRef(Grow)
                          appear={true}
                          in={false}
                          onEnter={[Function]}
                          onEntering={[Function]}
                          onExited={[Function]}
                          tabIndex="-1"
                          timeout="auto"
                        >
                          <Transition
                            addEndListener={[Function]}
                            appear={true}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            tabIndex="-1"
                            timeout={null}
                            unmountOnExit={false}
                          >
                            <WithStyles(ForwardRef(Paper))
                              className="MuiPopover-paper"
                              classes={
                                Object {
                                  "root": "MuiMenu-paper",
                                }
                              }
                              elevation={8}
                              style={
                                Object {
                                  "opacity": 0,
                                  "transform": "scale(0.75, 0.5625)",
                                  "visibility": "hidden",
                                }
                              }
                              tabIndex="-1"
                            >
                              <ForwardRef(Paper)
                                className="MuiPopover-paper"
                                classes={
                                  Object {
                                    "elevation0": "MuiPaper-elevation0",
                                    "elevation1": "MuiPaper-elevation1",
                                    "elevation10": "MuiPaper-elevation10",
                                    "elevation11": "MuiPaper-elevation11",
                                    "elevation12": "MuiPaper-elevation12",
                                    "elevation13": "MuiPaper-elevation13",
                                    "elevation14": "MuiPaper-elevation14",
                                    "elevation15": "MuiPaper-elevation15",
                                    "elevation16": "MuiPaper-elevation16",
                                    "elevation17": "MuiPaper-elevation17",
                                    "elevation18": "MuiPaper-elevation18",
                                    "elevation19": "MuiPaper-elevation19",
                                    "elevation2": "MuiPaper-elevation2",
                                    "elevation20": "MuiPaper-elevation20",
                                    "elevation21": "MuiPaper-elevation21",
                                    "elevation22": "MuiPaper-elevation22",
                                    "elevation23": "MuiPaper-elevation23",
                                    "elevation24": "MuiPaper-elevation24",
                                    "elevation3": "MuiPaper-elevation3",
                                    "elevation4": "MuiPaper-elevation4",
                                    "elevation5": "MuiPaper-elevation5",
                                    "elevation6": "MuiPaper-elevation6",
                                    "elevation7": "MuiPaper-elevation7",
                                    "elevation8": "MuiPaper-elevation8",
                                    "elevation9": "MuiPaper-elevation9",
                                    "outlined": "MuiPaper-outlined",
                                    "root": "MuiPaper-root MuiMenu-paper",
                                    "rounded": "MuiPaper-rounded",
                                  }
                                }
                                elevation={8}
                                style={
                                  Object {
                                    "opacity": 0,
                                    "transform": "scale(0.75, 0.5625)",
                                    "visibility": "hidden",
                                  }
                                }
                                tabIndex="-1"
                              >
                                <div
                                  className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                  style={
                                    Object {
                                      "opacity": 0,
                                      "transform": "scale(0.75, 0.5625)",
                                      "visibility": "hidden",
                                    }
                                  }
                                  tabIndex="-1"
                                >
                                  <ForwardRef(MenuList)
                                    actions={
                                      Object {
                                        "current": Object {
                                          "adjustStyleForScrollbar": [Function],
                                        },
                                      }
                                    }
                                    autoFocus={false}
                                    autoFocusItem={false}
                                    className="MuiMenu-list"
                                    onKeyDown={[Function]}
                                    variant="selectedMenu"
                                  >
                                    <WithStyles(ForwardRef(List))
                                      className="MuiMenu-list"
                                      onKeyDown={[Function]}
                                      role="menu"
                                      tabIndex={-1}
                                    >
                                      <ForwardRef(List)
                                        className="MuiMenu-list"
                                        classes={
                                          Object {
                                            "dense": "MuiList-dense",
                                            "padding": "MuiList-padding",
                                            "root": "MuiList-root",
                                            "subheader": "MuiList-subheader",
                                          }
                                        }
                                        onKeyDown={[Function]}
                                        role="menu"
                                        tabIndex={-1}
                                      >
                                        <ul
                                          className="MuiList-root MuiMenu-list MuiList-padding"
                                          onKeyDown={[Function]}
                                          role="menu"
                                          tabIndex={-1}
                                        >
                                          <WithStyles(ForwardRef(MenuItem))
                                            key=".$.0"
                                            tabIndex={0}
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                              tabIndex={0}
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                disableGutters={false}
                                                role="menuitem"
                                                tabIndex={0}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  disableGutters={false}
                                                  role="menuitem"
                                                  tabIndex={0}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    role="menuitem"
                                                    tabIndex={0}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      role="menuitem"
                                                      tabIndex={0}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        onBlur={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={0}
                                                      >
                                                        <WithStyles(ForwardRef(IconButton))
                                                          color="inherit"
                                                          key=".0"
                                                        >
                                                          <ForwardRef(IconButton)
                                                            classes={
                                                              Object {
                                                                "colorInherit": "MuiIconButton-colorInherit",
                                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                                "edgeStart": "MuiIconButton-edgeStart",
                                                                "label": "MuiIconButton-label",
                                                                "root": "MuiIconButton-root",
                                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                                              }
                                                            }
                                                            color="inherit"
                                                          >
                                                            <WithStyles(ForwardRef(ButtonBase))
                                                              centerRipple={true}
                                                              className="MuiIconButton-root MuiIconButton-colorInherit"
                                                              disabled={false}
                                                              focusRipple={true}
                                                            >
                                                              <ForwardRef(ButtonBase)
                                                                centerRipple={true}
                                                                className="MuiIconButton-root MuiIconButton-colorInherit"
                                                                classes={
                                                                  Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "root": "MuiButtonBase-root",
                                                                  }
                                                                }
                                                                disabled={false}
                                                                focusRipple={true}
                                                              >
                                                                <button
                                                                  className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                                                                  disabled={false}
                                                                  onBlur={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  tabIndex={0}
                                                                  type="button"
                                                                >
                                                                  <span
                                                                    className="MuiIconButton-label"
                                                                  >
                                                                    <WithStyles(ForwardRef(Badge))
                                                                      badgeContent={0}
                                                                      color="secondary"
                                                                    >
                                                                      <ForwardRef(Badge)
                                                                        badgeContent={0}
                                                                        classes={
                                                                          Object {
                                                                            "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                                                            "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                                                            "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                                                            "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                                                            "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                                                            "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                                                            "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                                                            "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                                                            "badge": "MuiBadge-badge",
                                                                            "colorError": "MuiBadge-colorError",
                                                                            "colorPrimary": "MuiBadge-colorPrimary",
                                                                            "colorSecondary": "MuiBadge-colorSecondary",
                                                                            "dot": "MuiBadge-dot",
                                                                            "invisible": "MuiBadge-invisible",
                                                                            "root": "MuiBadge-root",
                                                                          }
                                                                        }
                                                                        color="secondary"
                                                                      >
                                                                        <span
                                                                          className="MuiBadge-root"
                                                                        >
                                                                          <ForwardRef(ShoppingCartOutlinedIcon)>
                                                                            <WithStyles(ForwardRef(SvgIcon))>
                                                                              <ForwardRef(SvgIcon)
                                                                                classes={
                                                                                  Object {
                                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                    "root": "MuiSvgIcon-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  className="MuiSvgIcon-root"
                                                                                  focusable="false"
                                                                                  viewBox="0 0 24 24"
                                                                                >
                                                                                  <path
                                                                                    d="M15.55 13c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.37-.66-.11-1.48-.87-1.48H5.21l-.94-2H1v2h2l3.6 7.59-1.35 2.44C4.52 15.37 5.48 17 7 17h12v-2H7l1.1-2h7.45zM6.16 6h12.15l-2.76 5H8.53L6.16 6zM7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z"
                                                                                  />
                                                                                </svg>
                                                                              </ForwardRef(SvgIcon)>
                                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                                          </ForwardRef(ShoppingCartOutlinedIcon)>
                                                                          <span
                                                                            className="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorSecondary MuiBadge-invisible"
                                                                          >
                                                                            0
                                                                          </span>
                                                                        </span>
                                                                      </ForwardRef(Badge)>
                                                                    </WithStyles(ForwardRef(Badge))>
                                                                  </span>
                                                                  <WithStyles(memo)
                                                                    center={true}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={true}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </button>
                                                              </ForwardRef(ButtonBase)>
                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                          </ForwardRef(IconButton)>
                                                        </WithStyles(ForwardRef(IconButton))>
                                                        <p
                                                          key=".1"
                                                        >
                                                          <FormattedMessage
                                                            id="cart"
                                                          >
                                                            Cart
                                                          </FormattedMessage>
                                                        </p>
                                                        <WithStyles(memo)
                                                          center={false}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                          <WithStyles(ForwardRef(MenuItem))
                                            key=".$.1"
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                disableGutters={false}
                                                role="menuitem"
                                                tabIndex={-1}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  disableGutters={false}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        onBlur={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={-1}
                                                      >
                                                        <WithStyles(ForwardRef(IconButton))
                                                          color="inherit"
                                                          key=".0"
                                                          onClick={[Function]}
                                                        >
                                                          <ForwardRef(IconButton)
                                                            classes={
                                                              Object {
                                                                "colorInherit": "MuiIconButton-colorInherit",
                                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                                "edgeStart": "MuiIconButton-edgeStart",
                                                                "label": "MuiIconButton-label",
                                                                "root": "MuiIconButton-root",
                                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                                              }
                                                            }
                                                            color="inherit"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(ButtonBase))
                                                              centerRipple={true}
                                                              className="MuiIconButton-root MuiIconButton-colorInherit"
                                                              disabled={false}
                                                              focusRipple={true}
                                                              onClick={[Function]}
                                                            >
                                                              <ForwardRef(ButtonBase)
                                                                centerRipple={true}
                                                                className="MuiIconButton-root MuiIconButton-colorInherit"
                                                                classes={
                                                                  Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "root": "MuiButtonBase-root",
                                                                  }
                                                                }
                                                                disabled={false}
                                                                focusRipple={true}
                                                                onClick={[Function]}
                                                              >
                                                                <button
                                                                  className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                                                                  disabled={false}
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  tabIndex={0}
                                                                  type="button"
                                                                >
                                                                  <span
                                                                    className="MuiIconButton-label"
                                                                  >
                                                                    <WithStyles(ForwardRef(Badge))
                                                                      badgeContent={0}
                                                                      color="secondary"
                                                                    >
                                                                      <ForwardRef(Badge)
                                                                        badgeContent={0}
                                                                        classes={
                                                                          Object {
                                                                            "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                                                            "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                                                            "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                                                            "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                                                            "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                                                            "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                                                            "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                                                            "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                                                            "badge": "MuiBadge-badge",
                                                                            "colorError": "MuiBadge-colorError",
                                                                            "colorPrimary": "MuiBadge-colorPrimary",
                                                                            "colorSecondary": "MuiBadge-colorSecondary",
                                                                            "dot": "MuiBadge-dot",
                                                                            "invisible": "MuiBadge-invisible",
                                                                            "root": "MuiBadge-root",
                                                                          }
                                                                        }
                                                                        color="secondary"
                                                                      >
                                                                        <span
                                                                          className="MuiBadge-root"
                                                                        >
                                                                          <ForwardRef(AccountCircleOutlinedIcon)>
                                                                            <WithStyles(ForwardRef(SvgIcon))>
                                                                              <ForwardRef(SvgIcon)
                                                                                classes={
                                                                                  Object {
                                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                    "root": "MuiSvgIcon-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  className="MuiSvgIcon-root"
                                                                                  focusable="false"
                                                                                  viewBox="0 0 24 24"
                                                                                >
                                                                                  <path
                                                                                    d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM7.07 18.28c.43-.9 3.05-1.78 4.93-1.78s4.51.88 4.93 1.78C15.57 19.36 13.86 20 12 20s-3.57-.64-4.93-1.72zm11.29-1.45c-1.43-1.74-4.9-2.33-6.36-2.33s-4.93.59-6.36 2.33C4.62 15.49 4 13.82 4 12c0-4.41 3.59-8 8-8s8 3.59 8 8c0 1.82-.62 3.49-1.64 4.83zM12 6c-1.94 0-3.5 1.56-3.5 3.5S10.06 13 12 13s3.5-1.56 3.5-3.5S13.94 6 12 6zm0 5c-.83 0-1.5-.67-1.5-1.5S11.17 8 12 8s1.5.67 1.5 1.5S12.83 11 12 11z"
                                                                                  />
                                                                                </svg>
                                                                              </ForwardRef(SvgIcon)>
                                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                                          </ForwardRef(AccountCircleOutlinedIcon)>
                                                                          <span
                                                                            className="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorSecondary MuiBadge-invisible"
                                                                          >
                                                                            0
                                                                          </span>
                                                                        </span>
                                                                      </ForwardRef(Badge)>
                                                                    </WithStyles(ForwardRef(Badge))>
                                                                  </span>
                                                                  <WithStyles(memo)
                                                                    center={true}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={true}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </button>
                                                              </ForwardRef(ButtonBase)>
                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                          </ForwardRef(IconButton)>
                                                        </WithStyles(ForwardRef(IconButton))>
                                                        <p
                                                          key=".1"
                                                        >
                                                          <FormattedMessage
                                                            id="account"
                                                          >
                                                            Sign in
                                                          </FormattedMessage>
                                                        </p>
                                                        <WithStyles(memo)
                                                          center={false}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                          <WithStyles(ForwardRef(MenuItem))
                                            key=".$.2"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={-1}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  disableGutters={false}
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={-1}
                                                      >
                                                        <WithStyles(ForwardRef(IconButton))
                                                          aria-controls="primary-search-account-menu"
                                                          aria-haspopup="true"
                                                          color="inherit"
                                                          key=".0"
                                                        >
                                                          <ForwardRef(IconButton)
                                                            aria-controls="primary-search-account-menu"
                                                            aria-haspopup="true"
                                                            classes={
                                                              Object {
                                                                "colorInherit": "MuiIconButton-colorInherit",
                                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                                "edgeStart": "MuiIconButton-edgeStart",
                                                                "label": "MuiIconButton-label",
                                                                "root": "MuiIconButton-root",
                                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                                              }
                                                            }
                                                            color="inherit"
                                                          >
                                                            <WithStyles(ForwardRef(ButtonBase))
                                                              aria-controls="primary-search-account-menu"
                                                              aria-haspopup="true"
                                                              centerRipple={true}
                                                              className="MuiIconButton-root MuiIconButton-colorInherit"
                                                              disabled={false}
                                                              focusRipple={true}
                                                            >
                                                              <ForwardRef(ButtonBase)
                                                                aria-controls="primary-search-account-menu"
                                                                aria-haspopup="true"
                                                                centerRipple={true}
                                                                className="MuiIconButton-root MuiIconButton-colorInherit"
                                                                classes={
                                                                  Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "root": "MuiButtonBase-root",
                                                                  }
                                                                }
                                                                disabled={false}
                                                                focusRipple={true}
                                                              >
                                                                <button
                                                                  aria-controls="primary-search-account-menu"
                                                                  aria-haspopup="true"
                                                                  className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                                                                  disabled={false}
                                                                  onBlur={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  tabIndex={0}
                                                                  type="button"
                                                                >
                                                                  <span
                                                                    className="MuiIconButton-label"
                                                                  >
                                                                    <ForwardRef(LanguageOutlinedIcon)>
                                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                                        <ForwardRef(SvgIcon)
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="MuiSvgIcon-root"
                                                                            focusable="false"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2s.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56zm2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2s.07-1.35.16-2h4.68c.09.65.16 1.32.16 2s-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2s-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef(LanguageOutlinedIcon)>
                                                                  </span>
                                                                  <WithStyles(memo)
                                                                    center={true}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={true}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </button>
                                                              </ForwardRef(ButtonBase)>
                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                          </ForwardRef(IconButton)>
                                                        </WithStyles(ForwardRef(IconButton))>
                                                        <p
                                                          key=".1"
                                                        >
                                                          <FormattedMessage
                                                            id="language"
                                                          >
                                                            English
                                                          </FormattedMessage>
                                                        </p>
                                                        <WithStyles(memo)
                                                          center={false}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                        </ul>
                                      </ForwardRef(List)>
                                    </WithStyles(ForwardRef(List))>
                                  </ForwardRef(MenuList)>
                                </div>
                              </ForwardRef(Paper)>
                            </WithStyles(ForwardRef(Paper))>
                          </Transition>
                        </ForwardRef(Grow)>
                        <div
                          data-test="sentinelEnd"
                          tabIndex={0}
                        />
                      </Unstable_TrapFocus>
                    </div>
                  </Portal>
                </ForwardRef(Portal)>
              </ForwardRef(Modal)>
            </ForwardRef(Popover)>
          </WithStyles(ForwardRef(Popover))>
        </ForwardRef(Menu)>
      </WithStyles(ForwardRef(Menu))>
      <WithStyles(ForwardRef(Menu))
        anchorEl={null}
        anchorOrigin={
          Object {
            "horizontal": "right",
            "vertical": "top",
          }
        }
        id="primary-search-account-menu"
        keepMounted={true}
        onClose={[Function]}
        open={false}
        transformOrigin={
          Object {
            "horizontal": "right",
            "vertical": "top",
          }
        }
      >
        <ForwardRef(Menu)
          anchorEl={null}
          anchorOrigin={
            Object {
              "horizontal": "right",
              "vertical": "top",
            }
          }
          classes={
            Object {
              "list": "MuiMenu-list",
              "paper": "MuiMenu-paper",
            }
          }
          id="primary-search-account-menu"
          keepMounted={true}
          onClose={[Function]}
          open={false}
          transformOrigin={
            Object {
              "horizontal": "right",
              "vertical": "top",
            }
          }
        >
          <WithStyles(ForwardRef(Popover))
            PaperProps={
              Object {
                "classes": Object {
                  "root": "MuiMenu-paper",
                },
              }
            }
            anchorEl={null}
            anchorOrigin={
              Object {
                "horizontal": "right",
                "vertical": "top",
              }
            }
            getContentAnchorEl={[Function]}
            id="primary-search-account-menu"
            keepMounted={true}
            onClose={[Function]}
            onEntering={[Function]}
            open={false}
            transformOrigin={
              Object {
                "horizontal": "right",
                "vertical": "top",
              }
            }
            transitionDuration="auto"
          >
            <ForwardRef(Popover)
              PaperProps={
                Object {
                  "classes": Object {
                    "root": "MuiMenu-paper",
                  },
                }
              }
              anchorEl={null}
              anchorOrigin={
                Object {
                  "horizontal": "right",
                  "vertical": "top",
                }
              }
              classes={
                Object {
                  "paper": "MuiPopover-paper",
                  "root": "MuiPopover-root",
                }
              }
              getContentAnchorEl={[Function]}
              id="primary-search-account-menu"
              keepMounted={true}
              onClose={[Function]}
              onEntering={[Function]}
              open={false}
              transformOrigin={
                Object {
                  "horizontal": "right",
                  "vertical": "top",
                }
              }
              transitionDuration="auto"
            >
              <ForwardRef(Modal)
                BackdropProps={
                  Object {
                    "invisible": true,
                  }
                }
                className="MuiPopover-root"
                id="primary-search-account-menu"
                keepMounted={true}
                onClose={[Function]}
                open={false}
              >
                <ForwardRef(Portal)
                  disablePortal={false}
                >
                  <Portal
                    containerInfo={
                      <body>
                        <div
                          aria-hidden="true"
                          class="MuiPopover-root"
                          id="primary-search-account-menu-mobile"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                        >
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                            tabindex="-1"
                          >
                            <ul
                              class="MuiList-root MuiMenu-list MuiList-padding"
                              role="menu"
                              tabindex="-1"
                            >
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                role="menuitem"
                                tabindex="0"
                              >
                                <button
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                                  tabindex="0"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <span
                                      class="MuiBadge-root"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M15.55 13c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.37-.66-.11-1.48-.87-1.48H5.21l-.94-2H1v2h2l3.6 7.59-1.35 2.44C4.52 15.37 5.48 17 7 17h12v-2H7l1.1-2h7.45zM6.16 6h12.15l-2.76 5H8.53L6.16 6zM7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z"
                                        />
                                      </svg>
                                      <span
                                        class="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorSecondary MuiBadge-invisible"
                                      >
                                        0
                                      </span>
                                    </span>
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                                <p>
                                  Cart
                                </p>
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                role="menuitem"
                                tabindex="-1"
                              >
                                <button
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                                  tabindex="0"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <span
                                      class="MuiBadge-root"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM7.07 18.28c.43-.9 3.05-1.78 4.93-1.78s4.51.88 4.93 1.78C15.57 19.36 13.86 20 12 20s-3.57-.64-4.93-1.72zm11.29-1.45c-1.43-1.74-4.9-2.33-6.36-2.33s-4.93.59-6.36 2.33C4.62 15.49 4 13.82 4 12c0-4.41 3.59-8 8-8s8 3.59 8 8c0 1.82-.62 3.49-1.64 4.83zM12 6c-1.94 0-3.5 1.56-3.5 3.5S10.06 13 12 13s3.5-1.56 3.5-3.5S13.94 6 12 6zm0 5c-.83 0-1.5-.67-1.5-1.5S11.17 8 12 8s1.5.67 1.5 1.5S12.83 11 12 11z"
                                        />
                                      </svg>
                                      <span
                                        class="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorSecondary MuiBadge-invisible"
                                      >
                                        0
                                      </span>
                                    </span>
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                                <p>
                                  Sign in
                                </p>
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                role="menuitem"
                                tabindex="-1"
                              >
                                <button
                                  aria-controls="primary-search-account-menu"
                                  aria-haspopup="true"
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                                  tabindex="0"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2s.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56zm2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2s.07-1.35.16-2h4.68c.09.65.16 1.32.16 2s-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2s-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z"
                                      />
                                    </svg>
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                                <p>
                                  English
                                </p>
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                            </ul>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                        <div
                          aria-hidden="true"
                          class="MuiPopover-root"
                          id="primary-search-account-menu"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                        >
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                            tabindex="-1"
                          >
                            <ul
                              class="MuiList-root MuiMenu-list MuiList-padding"
                              role="menu"
                              tabindex="-1"
                            >
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                role="menuitem"
                                tabindex="0"
                              >
                                English
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                role="menuitem"
                                tabindex="-1"
                              >
                                हिन्दी
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                            </ul>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                      </body>
                    }
                  >
                    <div
                      className="MuiPopover-root"
                      id="primary-search-account-menu"
                      onKeyDown={[Function]}
                      role="presentation"
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                          "visibility": "hidden",
                          "zIndex": 1300,
                        }
                      }
                    >
                      <ForwardRef(SimpleBackdrop)
                        invisible={true}
                        onClick={[Function]}
                        open={false}
                      />
                      <Unstable_TrapFocus
                        disableAutoFocus={false}
                        disableEnforceFocus={false}
                        disableRestoreFocus={false}
                        getDoc={[Function]}
                        isEnabled={[Function]}
                        open={false}
                      >
                        <div
                          data-test="sentinelStart"
                          tabIndex={0}
                        />
                        <ForwardRef(Grow)
                          appear={true}
                          in={false}
                          onEnter={[Function]}
                          onEntering={[Function]}
                          onExited={[Function]}
                          tabIndex="-1"
                          timeout="auto"
                        >
                          <Transition
                            addEndListener={[Function]}
                            appear={true}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            tabIndex="-1"
                            timeout={null}
                            unmountOnExit={false}
                          >
                            <WithStyles(ForwardRef(Paper))
                              className="MuiPopover-paper"
                              classes={
                                Object {
                                  "root": "MuiMenu-paper",
                                }
                              }
                              elevation={8}
                              style={
                                Object {
                                  "opacity": 0,
                                  "transform": "scale(0.75, 0.5625)",
                                  "visibility": "hidden",
                                }
                              }
                              tabIndex="-1"
                            >
                              <ForwardRef(Paper)
                                className="MuiPopover-paper"
                                classes={
                                  Object {
                                    "elevation0": "MuiPaper-elevation0",
                                    "elevation1": "MuiPaper-elevation1",
                                    "elevation10": "MuiPaper-elevation10",
                                    "elevation11": "MuiPaper-elevation11",
                                    "elevation12": "MuiPaper-elevation12",
                                    "elevation13": "MuiPaper-elevation13",
                                    "elevation14": "MuiPaper-elevation14",
                                    "elevation15": "MuiPaper-elevation15",
                                    "elevation16": "MuiPaper-elevation16",
                                    "elevation17": "MuiPaper-elevation17",
                                    "elevation18": "MuiPaper-elevation18",
                                    "elevation19": "MuiPaper-elevation19",
                                    "elevation2": "MuiPaper-elevation2",
                                    "elevation20": "MuiPaper-elevation20",
                                    "elevation21": "MuiPaper-elevation21",
                                    "elevation22": "MuiPaper-elevation22",
                                    "elevation23": "MuiPaper-elevation23",
                                    "elevation24": "MuiPaper-elevation24",
                                    "elevation3": "MuiPaper-elevation3",
                                    "elevation4": "MuiPaper-elevation4",
                                    "elevation5": "MuiPaper-elevation5",
                                    "elevation6": "MuiPaper-elevation6",
                                    "elevation7": "MuiPaper-elevation7",
                                    "elevation8": "MuiPaper-elevation8",
                                    "elevation9": "MuiPaper-elevation9",
                                    "outlined": "MuiPaper-outlined",
                                    "root": "MuiPaper-root MuiMenu-paper",
                                    "rounded": "MuiPaper-rounded",
                                  }
                                }
                                elevation={8}
                                style={
                                  Object {
                                    "opacity": 0,
                                    "transform": "scale(0.75, 0.5625)",
                                    "visibility": "hidden",
                                  }
                                }
                                tabIndex="-1"
                              >
                                <div
                                  className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                  style={
                                    Object {
                                      "opacity": 0,
                                      "transform": "scale(0.75, 0.5625)",
                                      "visibility": "hidden",
                                    }
                                  }
                                  tabIndex="-1"
                                >
                                  <ForwardRef(MenuList)
                                    actions={
                                      Object {
                                        "current": Object {
                                          "adjustStyleForScrollbar": [Function],
                                        },
                                      }
                                    }
                                    autoFocus={false}
                                    autoFocusItem={false}
                                    className="MuiMenu-list"
                                    onKeyDown={[Function]}
                                    variant="selectedMenu"
                                  >
                                    <WithStyles(ForwardRef(List))
                                      className="MuiMenu-list"
                                      onKeyDown={[Function]}
                                      role="menu"
                                      tabIndex={-1}
                                    >
                                      <ForwardRef(List)
                                        className="MuiMenu-list"
                                        classes={
                                          Object {
                                            "dense": "MuiList-dense",
                                            "padding": "MuiList-padding",
                                            "root": "MuiList-root",
                                            "subheader": "MuiList-subheader",
                                          }
                                        }
                                        onKeyDown={[Function]}
                                        role="menu"
                                        tabIndex={-1}
                                      >
                                        <ul
                                          className="MuiList-root MuiMenu-list MuiList-padding"
                                          onKeyDown={[Function]}
                                          role="menu"
                                          tabIndex={-1}
                                        >
                                          <WithStyles(ForwardRef(MenuItem))
                                            key=".$.0"
                                            onClick={[Function]}
                                            tabIndex={0}
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                              onClick={[Function]}
                                              tabIndex={0}
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={0}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  disableGutters={false}
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={0}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={0}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={0}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={0}
                                                      >
                                                        English
                                                        <WithStyles(memo)
                                                          center={false}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                          <WithStyles(ForwardRef(MenuItem))
                                            key=".$.1"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={-1}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  disableGutters={false}
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={-1}
                                                      >
                                                        हिन्दी
                                                        <WithStyles(memo)
                                                          center={false}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                        </ul>
                                      </ForwardRef(List)>
                                    </WithStyles(ForwardRef(List))>
                                  </ForwardRef(MenuList)>
                                </div>
                              </ForwardRef(Paper)>
                            </WithStyles(ForwardRef(Paper))>
                          </Transition>
                        </ForwardRef(Grow)>
                        <div
                          data-test="sentinelEnd"
                          tabIndex={0}
                        />
                      </Unstable_TrapFocus>
                    </div>
                  </Portal>
                </ForwardRef(Portal)>
              </ForwardRef(Modal)>
            </ForwardRef(Popover)>
          </WithStyles(ForwardRef(Popover))>
        </ForwardRef(Menu)>
      </WithStyles(ForwardRef(Menu))>
    </div>
  </Navbar>
</IntlProvider>
`;
